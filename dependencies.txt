===autoscaling

aws_autoscaling_attachment
  autoscaling_group_name = aws_autoscaling_group.asg.id
  elb                    = aws_elb.bar.id
  lb_target_group_arn    = aws_lb_target_group.test.arn

aws_autoscaling_group
  placement_group           = aws_placement_group.test.id
  launch_configuration      = aws_launch_configuration.foobar.name
  vpc_zone_identifier       = [aws_subnet.example1.id, aws_subnet.example2.id]
  
  initial_lifecycle_hook  
    notification_target_arn = "arn:aws:sqs:us-east-1:444455556666:queue1*"
    role_arn                = "arn:aws:iam::123456789012:role/S3Access"

  launch_template
    id      = aws_launch_template.foobar.id
    version = aws_launch_template.example.latest_version

  ...
      launch_template_specification
        launch_template_id = aws_launch_template.example.id

  load_balancers = [aws_elb]
  target_group_arns = aws_alb_target_group arns

  service_linked_role_arn = role_arn

aws_autoscaling_group_tag
  autoscaling_group_name = aws_autoscaling_group.name
  
aws_autoscaling_lifecycle_hook
  autoscaling_group_name = aws_autoscaling_group.foobar.name
  role_arn

aws_autoscaling_notification
  group_names = [
    aws_autoscaling_group.bar.name,
    aws_autoscaling_group.foo.name,
  ]
  topic_arn = aws_sns_topic.example.arn

aws_autoscaling_policy
  autoscaling_group_name = aws_autoscaling_group.bar.name

aws_autoscaling_schedule
  autoscaling_group_name = aws_autoscaling_group.foobar.name

aws_launch_configuration
  image_id      = data.aws_ami.ubuntu.id
  iam_instance_profile
  security_groups
  vpc_classic_link_id
  vpc_classic_link_security_groups
  ebs_block_device
    device_name
    snapshot_id
  ephemeral_block_device
    device_name

=== docdb
aws_docdb_cluster
  db_subnet_group_name
  db_cluster_parameter_group_name 
  kms_key_id
  vpc_security_group_ids
  global_cluster_identifier = aws_docdb_global_cluster.example.id


aws_docdb_cluster_instance
  cluster_identifier = aws_docdb_cluster.default.id
  performance_insights_kms_key_id

aws_docdb_cluster_parameter_group
aws_docdb_cluster_snapshot
  db_cluster_identifier          = aws_docdb_cluster.example.id

aws_docdb_event_subscription
  source_ids       = [aws_docdb_cluster.example.id]
  sns_topic_arn    = aws_sns_topic.example.arn

aws_docdb_global_cluster
  source_db_cluster_identifier = aws_docdb_cluster.example.arn

aws_docdb_subnet_group
  subnet_ids = [aws_subnet.frontend.id, aws_subnet.backend.id]


=== elasticsearch
aws_elasticsearch_domain
  log_publishing_options 
    cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn

  vpc_options {
    subnet_ids = [
      data.aws_subnet_ids.selected.ids[0],
      data.aws_subnet_ids.selected.ids[1],
    ]

    security_group_ids = [aws_security_group.es.id]
  }


aws_elasticsearch_domain_policy
  domain_name = aws_elasticsearch_domain.example.domain_name


=== elasticache

aws_elasticache_cluster
  replication_group_id = aws_elasticache_replication_group.example.id
  log_delivery_configuration 
    destination      = aws_cloudwatch_log_group.example.name
    destination_type = "cloudwatch-logs"
  
  log_delivery_configuration
    destination      = aws_kinesis_firehose_delivery_stream.example.name
    destination_type = "kinesis-firehose"

  preferred_outpost_arn = data.aws_outposts_outpost.example.arn

  subnet_group_name    = aws_elasticache_subnet_group.example.name

  parameter_group_name
  notification_topic_arn 

  security_group_ids

  snapshot_arns – (Optional, Redis only) Single-element string list containing an Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3. The object name cannot contain any commas. Changing snapshot_arns forces a new resource.

  snapshot_name - (Optional, Redis only) Name of a snapshot from which to restore data into the new node group. Changing snapshot_name forces a new resource.

  subnet_group_name – (Optional, VPC only) Name of the subnet group to be used for the cache cluster. Changing this value will re-create the resource.
  


aws_elasticache_global_replication_group
  primary_replication_group_id       = aws_elasticache_replication_group.primary.id
  parameter_group_name = aws_elasticache_parameter_group.xxx.id

aws_elasticache_parameter_group

aws_elasticache_replication_group
  log_delivery_configuration {
    destination      = aws_cloudwatch_log_group.example.name
    destination_type = "cloudwatch-logs"
  }
  log_delivery_configuration {
    destination      = aws_kinesis_firehose_delivery_stream.example.name
    destination_type = "kinesis-firehose"
  }

  global_replication_group_id = aws_elasticache_global_replication_group.example.global_replication_group_id
  kms_key_id
  notification_topic_arn – (Optional) ARN of an SNS topic to send ElastiCache notifications to. Example: arn:aws:sns:us-east-1:012345678999:my_sns_topic
  parameter_group_name
  security_group_ids
  security_group_names
  snapshot_arns
  subnet_group_name
  user_group_ids


aws_elasticache_subnet_group
  subnet_ids = [aws_subnet.foo.id]

aws_elasticache_user
aws_elasticache_user_group
  user_ids      = [aws_elasticache_user.test.user_id]

aws_elasticache_user_group_association
  user_group_id = aws_elasticache_user_group.example.user_group_id
  user_id       = aws_elasticache_user.example.user_id




aws_dynamodb_contributor_insights
  table_name
aws_dynamodb_global_table
  name = "myTable"
aws_dynamodb_kinesis_streaming_destination
  stream_arn = aws_kinesis_stream.example.arn
  table_name = aws_dynamodb_table.example.name

aws_dynamodb_table
aws_dynamodb_table_replica
  global_table_arn = aws_dynamodb_table.example.arn
  kms_key_arn
  
aws_dynamodb_tag
  resource_arn = aws_dynamodb_table.test.arn



aws_cognito_identity_provider
  user_pool_id  = aws_cognito_user_pool.example.id
  idp_identifiers

aws_cognito_managed_user_pool_client
  user_pool_id = aws_cognito_user_pool.example.id

aws_cognito_resource_server
  user_pool_id = aws_cognito_user_pool.pool.id


aws_cognito_risk_configuration
  user_pool_id = aws_cognito_user_pool.example.id
  client_id - (Optional) The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.
  source_arn - (Required) The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.

aws_cognito_user
  user_pool_id = aws_cognito_user_pool.example.id


aws_cognito_user_group
  user_pool_id = aws_cognito_user_pool.main.id
    role_arn     = aws_iam_role.group_role.arn



aws_cognito_user_in_group
  user_pool_id = aws_cognito_user_pool.example.id
  group_name   = aws_cognito_user_group.example.name
  username     = aws_cognito_user.example.username

aws_cognito_user_pool
    sns_caller_arn = aws_iam_role.example.arn
    source_arn - (Optional) ARN of the SES verified email identity to use. Required if email_sending_account is set to DEVELOPER.
    kms_key_id - (Optional) The Amazon Resource Name of Key Management Service Customer master keys. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to CustomEmailSender and CustomSMSSender.
    lambda_arn
    lambda_version
    external_id - (Required) External ID used in IAM role trust relationships. For more information about using external IDs, see How to Use an External ID When Granting Access to Your AWS Resources to a Third Party.
    sns_caller_arn - (Required) ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.


aws_cognito_user_pool_client
  user_pool_id = aws_cognito_user_pool.pool.id

  analytics_configuration {
    application_id   = aws_pinpoint_app.test.application_id
    external_id      = "some_id"
    role_arn         = aws_iam_role.test.arn
    user_data_shared = true
  }  

aws_cognito_user_pool_domain
  user_pool_id = aws_cognito_user_pool.example.id
  certificate_arn = aws_acm_certificate.cert.arn

aws_cognito_user_pool_ui_customization
  client_id = aws_cognito_user_pool_client.example.id
  user_pool_id = aws_cognito_user_pool_domain.example.user_pool_id

aws_cloudwatch_composite_alarm
  alarm_actions = aws_sns_topic.example.arn
  ok_actions    = aws_sns_topic.example.arn
  alarm_rule 

aws_cloudwatch_dashboard
aws_cloudwatch_metric_alarm
  dimensions = {
    AutoScalingGroupName = aws_autoscaling_group.bar.name
  }
  alarm_actions     = [aws_autoscaling_policy.bat.arn]

  alarm_actions       = [aws_sns_topic.sns.arn]
  ok_actions          = [aws_sns_topic.sns.arn]
  dimensions = {
    TargetGroup  = aws_lb_target_group.lb-tg.arn_suffix
    LoadBalancer = aws_lb.lb.arn_suffix
  }


aws_cloudwatch_metric_stream
  role_arn      = aws_iam_role.metric_stream_to_firehose.arn
  firehose_arn  = aws_kinesis_firehose_delivery_stream.s3_stream.arn


aws_cloudtrail
  s3_bucket_name                = aws_s3_bucket.foo.id
  cloud_watch_logs_group_arn = "${aws_cloudwatch_log_group.example.arn}:*" # CloudTrail requires the Log Stream wildcard
  cloud_watch_logs_role_arn
  kms_key_id
  sns_topic_name


aws_service_discovery_http_namespace
aws_service_discovery_instance
  service_id  = aws_service_discovery_service.example.id

aws_service_discovery_private_dns_namespace
  vpc         = aws_vpc.example.id

aws_service_discovery_public_dns_namespace
aws_service_discovery_service
    namespace_id = aws_service_discovery_private_dns_namespace.example.id


aws_guardduty_detector
aws_guardduty_filter
  detector_id = aws_guardduty_detector.example.id

aws_guardduty_invite_accepter
  detector_id       = aws_guardduty_detector.member.id
  master_account_id = aws_guardduty_detector.primary.account_id

aws_guardduty_ipset
  detector_id = aws_guardduty_detector.primary.id


aws_guardduty_member
  account_id         = aws_guardduty_detector.member.account_id
  detector_id        = aws_guardduty_detector.primary.id

aws_guardduty_organization_admin_account
aws_guardduty_organization_configuration
  detector_id = aws_guardduty_detector.example.id

aws_guardduty_publishing_destination
  detector_id     = aws_guardduty_detector.test_gd.id
  destination_arn = aws_s3_bucket.gd_bucket.arn
  kms_key_arn     = aws_kms_key.gd_key.arn

aws_guardduty_threatintelset
  detector_id = aws_guardduty_detector.primary.id



aws_api_gateway_account
  cloudwatch_role_arn = aws_iam_role.cloudwatch.arn

aws_api_gateway_api_key
aws_api_gateway_authorizer
  rest_api_id            = aws_api_gateway_rest_api.demo.id
  authorizer_uri         = aws_lambda_function.authorizer.invoke_arn
  authorizer_credentials = aws_iam_role.invocation_role.arn
  provider_arns - (Optional, required for type COGNITO_USER_POOLS) List of the Amazon Cognito user pool ARNs. Each element is of this format: arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}

aws_api_gateway_base_path_mapping
  api_id      = aws_api_gateway_rest_api.example.id
  stage_name  = aws_api_gateway_stage.example.stage_name
  domain_name = aws_api_gateway_domain_name.example.domain_name

aws_api_gateway_client_certificate
aws_api_gateway_deployment
  rest_api_id = aws_api_gateway_rest_api.example.id

aws_api_gateway_documentation_part
  rest_api_id = aws_api_gateway_rest_api.example.id

aws_api_gateway_documentation_version
  rest_api_id = aws_api_gateway_rest_api.example.id

aws_api_gateway_domain_name
  certificate_arn = aws_acm_certificate_validation.example.certificate_arn

aws_api_gateway_gateway_response
  rest_api_id   = aws_api_gateway_rest_api.main.id

aws_api_gateway_integration
  rest_api_id          = aws_api_gateway_rest_api.MyDemoAPI.id
  resource_id          = aws_api_gateway_resource.MyDemoResource.id
  http_method          = aws_api_gateway_method.MyDemoMethod.http_method

aws_api_gateway_integration_response
  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id
  resource_id = aws_api_gateway_resource.MyDemoResource.id
  http_method = aws_api_gateway_method.MyDemoMethod.http_method
  
aws_api_gateway_method
  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id
  resource_id   = aws_api_gateway_resource.MyDemoResource.id
  authorizer_id = aws_api_gateway_authorizer.this.id


aws_api_gateway_method_response
  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id
  resource_id = aws_api_gateway_resource.MyDemoResource.id
  http_method = aws_api_gateway_method.MyDemoMethod.http_method

aws_api_gateway_method_settings
  rest_api_id = aws_api_gateway_rest_api.example.id
  stage_name  = aws_api_gateway_stage.example.stage_name

aws_api_gateway_model
  rest_api_id  = aws_api_gateway_rest_api.MyDemoAPI.id


aws_api_gateway_request_validator
  rest_api_id                 = aws_api_gateway_rest_api.example.id

aws_api_gateway_resource
  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id
  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id

aws_api_gateway_rest_api
aws_api_gateway_rest_api_policy
  rest_api_id = aws_api_gateway_rest_api.test.id
  policy      = data.aws_iam_policy_document.test.json

aws_api_gateway_stage
  deployment_id = aws_api_gateway_deployment.example.id
  rest_api_id   = aws_api_gateway_rest_api.example.id

aws_api_gateway_usage_plan
    api_id = aws_api_gateway_rest_api.example.id
    stage  = aws_api_gateway_stage.development.stage_name

aws_api_gateway_usage_plan_key
  key_id        = aws_api_gateway_api_key.mykey.id
  usage_plan_id = aws_api_gateway_usage_plan.myusageplan.id

aws_api_gateway_vpc_link
  target_arns = [aws_lb.example.arn]


aws_wafv2_ip_set
aws_wafv2_regex_pattern_set
aws_wafv2_rule_group
aws_wafv2_web_acl
aws_wafv2_web_acl_association
  resource_arn = aws_api_gateway_stage.example.arn
  web_acl_arn  = aws_wafv2_web_acl.example.arn

aws_wafv2_web_acl_logging_configuration
  log_destination_configs = [aws_kinesis_firehose_delivery_stream.example.arn]
  resource_arn            = aws_wafv2_web_acl.example.arn



aws_ssm_activation
  iam_role           = aws_iam_role.test_role.id

aws_ssm_association
  targets {
    key    = "InstanceIds"
    values = [aws_instance.example.id]
  }

aws_ssm_default_patch_baseline
  baseline_id      = aws_ssm_patch_baseline.example.id

aws_ssm_document
aws_ssm_maintenance_window
aws_ssm_maintenance_window_target
  window_id     = aws_ssm_maintenance_window.window.id

aws_ssm_maintenance_window_task
  window_id       = aws_ssm_maintenance_window.example.id
  targets {
    key    = "InstanceIds"
    values = [aws_instance.example.id]
  }

aws_ssm_parameter
aws_ssm_patch_baseline
aws_ssm_patch_group
  baseline_id = aws_ssm_patch_baseline.production.id

aws_ssm_resource_data_sync
    bucket_name = aws_s3_bucket.hoge.bucket

aws_ssm_service_setting


aws_sqs_queue
    deadLetterTargetArn = aws_sqs_queue.terraform_queue_deadletter.arn
    sourceQueueArns   = [aws_sqs_queue.terraform_queue.arn]



aws_sqs_queue_policy
  queue_url = aws_sqs_queue.q.id


aws_sns_platform_application
aws_sns_sms_preferences
  usage_report_s3_bucket - (Optional) The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.

aws_sns_topic
aws_sns_topic_policy
  arn = aws_sns_topic.test.arn

aws_sns_topic_subscription
  topic_arn = aws_sns_topic.user_updates.arn
  endpoint  = aws_sqs_queue.user_updates_queue.arn
  subscription_role_arn


aws_db_cluster_snapshot
  db_cluster_identifier          = aws_rds_cluster.example.id


aws_db_event_subscription
  sns_topic = aws_sns_topic.default.arn
  source_ids  = [aws_db_instance.default.id]


aws_db_instance
  master_user_secret_kms_key_id = aws_kms_key.example.key_id
  db_subnet_group_name
  parameter_group_name
  domain_iam_role_name 
  kms_key_id
  monitoring_role_arn
  performance_insights_kms_key_id
  vpc_security_group_ids
  security_group_names

aws_db_instance_automated_backups_replication
  source_db_instance_arn = aws_db_instance.default.arn
  kms_key_id             = aws_kms_key.default.arn
  

aws_db_instance_role_association
  db_instance_identifier = aws_db_instance.example.id
  role_arn               = aws_iam_role.example.arn

aws_db_option_group
    option_settings {
      name  = "IAM_ROLE_ARN"
      value = aws_iam_role.example.arn
    }

aws_db_parameter_group
aws_db_proxy
  role_arn               = aws_iam_role.example.arn
  vpc_security_group_ids = [aws_security_group.example.id]
  vpc_subnet_ids         = [aws_subnet.example.id]
  secret_arn  = aws_secretsmanager_secret.example.arn


aws_db_proxy_default_target_group
  db_proxy_name = aws_db_proxy.example.name


aws_db_proxy_endpoint
  db_proxy_name          = aws_db_proxy.test.name
    vpc_subnet_ids         = aws_subnet.test[*].id



aws_db_proxy_target
 db_instance_identifier = aws_db_instance.example.id
  db_proxy_name          = aws_db_proxy.example.name
  target_group_name      = aws_db_proxy_default_target_group.example.name
}

aws_db_snapshot
  db_instance_identifier = aws_db_instance.bar.id

aws_db_snapshot_copy
  source_db_snapshot_identifier = aws_db_snapshot.example.db_snapshot_arn


aws_db_subnet_group
  subnet_ids = [aws_subnet.frontend.id, aws_subnet.backend.id]

aws_rds_cluster
  db_subnet_group_name = aws_db_subnet_group.example.name
  master_user_secret_kms_key_id = aws_kms_key.example.key_id
  snapshot_identifier = data.aws_db_cluster_snapshot.example.id
  db_cluster_parameter_group_name
  db_instance_parameter_group_name 
  global_cluster_identifier
  iam_roles
  kms_key_id
  snapshot_identifier 
  vpc_security_group_ids
  bucket_name           = "mybucket"
  ingestion_role        = "arn:aws:iam::1234567890:role/role-xtrabackup-rds-restore"

aws_rds_cluster_activity_stream
  resource_arn = aws_rds_cluster.default.arn
  kms_key_id   = aws_kms_key.default.key_id

aws_rds_cluster_endpoint
  cluster_identifier          = aws_rds_cluster.default.id
  static_members = [
    aws_rds_cluster_instance.test1.id,
    aws_rds_cluster_instance.test3.id,
  ]  


aws_rds_cluster_instance
  cluster_identifier = aws_rds_cluster.default.id
  db_subnet_group_name
  db_parameter_group_name
  monitoring_role_arn

aws_rds_cluster_parameter_group
aws_rds_cluster_role_association
  db_cluster_identifier = aws_rds_cluster.example.id
    role_arn              = aws_iam_role.example.arn


aws_rds_export_task
  source_arn             = aws_db_snapshot.example.db_snapshot_arn
  s3_bucket_name         = aws_s3_bucket.example.id
  iam_role_arn           = aws_iam_role.example.arn
  kms_key_id             = aws_kms_key.example.arn

aws_rds_global_cluster
  source_db_cluster_identifier

aws_rds_reserved_instance
  offering_id    = data.aws_rds_reserved_instance_offering.test.offering_id


aws_lambda_alias
  function_name    = aws_lambda_function.lambda_function_test.arn

aws_lambda_code_signing_config
  allowed_publishers {
    signing_profile_version_arns = [
      aws_signer_signing_profile.example1.arn,
      aws_signer_signing_profile.example2.arn,
    ]
  }

aws_lambda_event_source_mapping
  event_source_arn  = aws_dynamodb_table.example.stream_arn
  function_name     = aws_lambda_function.example.arn

aws_lambda_function
  role          = aws_iam_role.iam_for_lambda.arn
  code_signing_config_arn
  subnet_ids         = [aws_subnet.subnet_for_lambda.id]
  security_group_ids = [aws_security_group.sg_for_lambda.id]
  kms_key_arn 
  s3_bucket
  dead_letter_config sqs target_arn
  file_system_config efs arn


  




aws_lambda_function_event_invoke_config
  function_name = aws_lambda_alias.example.function_name

aws_lambda_function_url
  function_name      = aws_lambda_function.test.function_name

aws_lambda_layer_version
aws_lambda_layer_version_permission
  layer_name     = "arn:aws:lambda:us-west-2:123456654321:layer:test_layer1"

aws_lambda_permission
    function_name = aws_lambda_function.test_lambda.function_name
  qualifier     = aws_lambda_alias.test_alias.name

aws_lambda_provisioned_concurrency_config
  function_name                     = aws_lambda_alias.example.function_name
  qualifier                         = aws_lambda_alias.example.name
