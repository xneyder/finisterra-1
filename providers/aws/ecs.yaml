aws_ecs_cluster:
  # terraform_module: "../../../terraform-aws-modules/terraform-aws-ecs/modules/cluster/"
  terraform_module: "github.com/finisterra-io/terraform-aws-ecs//modules/cluster?ref=main"
  terraform_module_version: "5.2.0"
  path: ecs
  dependencies:
    - "../iam_role"
  keys:
    - name
  target_resource_name: this
  name_field: cluster_name
  # target_submodule: module.cluster
  defaults:
    create_cloudwatch_log_group: false
  fields:
    cluster_name:
      field: name
      type: string
    cluster_configuration:
      function: to_map
      arg: configuration
      type: map
    cluster_service_connect_defaults:
      function: to_map
      arg: service_connect_defaults
      type: map
    cluster_settings:
      function: to_map
      arg: setting
      type: map
    tags:
      field: tags
      type: map
  childs:
    aws_cloudwatch_log_group: #Not tested
      join:
        name:
          function: cloudwatch_log_group_name
      target_resource_name: this
      target_submodule: module.cluster
      defaults:
        create_cloudwatch_log_group: true
      fields:
        cloudwatch_log_group_retention_in_days:
          field: retention_in_days
          type: number
        cloudwatch_log_group_kms_key_id:
          field: kms_key_id
          type: string
        cloudwatch_log_group_tags:
          field: tags
          type: map

  # aws_ecs_cluster_capacity_providers: #Not tested
  #   join:
  #     - cluster_name
  #   target_resource_name: this
  #   fields:

  # aws_ecs_capacity_provider: #Not tested
  #   join:
  #     - cluster_name
  #   target_resource_name: this
  #   fields:

aws_ecs_service:
  # terraform_module: "../../../terraform-aws-modules/terraform-aws-ecs/modules/service/"
  terraform_module: "github.com/finisterra-io/terraform-aws-ecs//modules/service?ref=main"
  terraform_module_version: "5.2.0"
  # dict_to_hcl: true
  join:
    arn:
      function: aws_ecs_service_cluster_arn
  target_resource_name: ignore_task_definition
  # target_submodule: module.service
  # root_attribute: services
  # root_attribute_key: name
  path: ecs
  dependencies:
    - "../iam_role"
  defaults:
    ignore_task_definition_changes: true
    create_task_definition: false
    create_iam_role: false
    create_target_group: false
  import_id:
    function: aws_ecs_service_import_id
  fields:
    name:
      field: name
      type: string
    alarms:
      field: alarms
      type: map
    capacity_provider_strategy:
      field: capacity_provider_strategy
      type: map
    cluster_arn:
      field: cluster
      type: string
    deployment_circuit_breaker:
      field: deployment_circuit_breaker
      type: map
    deployment_controller:
      field: deployment_controller
      type: map
    deployment_maximum_percent:
      field: deployment_maximum_percent
      type: number
    deployment_minimum_healthy_percent:
      field: deployment_minimum_healthy_percent
      type: number
    desired_count:
      field: desired_count
      type: number
    enable_ecs_managed_tags:
      field: enable_ecs_managed_tags
      type: boolean
    enable_execute_command:
      field: enable_execute_command
      type: boolean
    force_new_deployment:
      field: force_new_deployment
      type: boolean
      default: null
    health_check_grace_period_seconds:
      field: health_check_grace_period_seconds
      type: number
    launch_type:
      field: launch_type
      type: string
    load_balancer:
      function: load_balancer
      type: map
    ordered_placement_strategy:
      field: ordered_placement_strategy
      type: map
    placement_constraints:
      field: placement_constraints
      type: map
    platform_version:
      field: platform_version
      type: string
    scheduling_strategy:
      field: scheduling_strategy
      type: string
    service_connect_configuration:
      field: service_connect_configuration
      type: map
    service_registries:
      function: build_service_registries
      arg: service_registries
      type: map
    triggers:
      field: triggers
      type: map
    wait_for_steady_state:
      field: wait_for_steady_state
      type: boolean
      default: null
    propagate_tags:
      field: propagate_tags
      type: string
    tags:
      field: tags
      type: map
    timeouts:
      field: timeouts
      type: map
      default: null
    assign_public_ip:
      function: get_network_field
      arg: assign_public_ip
      type: boolean
    security_group_ids:
      function: get_network_field
      arg: security_group_ids
      type: list
    subnet_ids:
      function: get_network_field
      arg: subnet_ids
      type: list
    create_security_group:
      function: check_subnet_ids
    iam_role_name:
      function: get_iam_role
      arg: iam_role
      type: string
    network_configuration:
      field: network_configuration
      type: list

  childs:
    # aws_iam_role:
    #   join:
    #     iam_role:
    #       function: join_path_role_name
    #   target_resource_name: service
    #   defaults:
    #     # create_iam_role: true
    #     iam_role_use_name_prefix: false
    #   fields:
    #     create_iam_role:
    #       unique: true
    #     iam_role_arn:
    #       field: arn
    #       type: string
    #     iam_role_name:
    #       field: name
    #       type: string
    #     iam_role_path:
    #       field: path
    #       type: string
    #     iam_role_description:
    #       field: description
    #       type: string
    #     iam_role_permissions_boundary:
    #       field: permissions_boundary
    #       type: string
    #     iam_role_tags:
    #       field: tags
    #       type: map
    #     iam_role_inline_policies:
    #       field: inline_policy
    #       type: list

    #   childs:
    #     aws_iam_role_policy_attachment:
    #       join:
    #         name:
    #           field: role
    #       target_resource_name: service
    #       fields:
    #         create_iam_role:
    #           unique: true
    #         iam_policy_name:
    #           function: get_iam_policy_name
    #           arg: policy_arn
    #           type: string

    # childs:
    #   aws_iam_policy:
    #     join:
    #       policy_arn:
    #         field: arn
    #     target_resource_name: service
    #     fields:
    #       create_iam_policy:
    #         unique: true
    #       iam_policy_name:
    #         field: name
    #         type: string
    #       iam_policy_description:
    #         field: description
    #         type: string
    #       iam_policy_path:
    #         field: path
    #         type: string
    #       iam_policy_document:
    #         field: policy
    #         type: string
    #         multiline: true

    aws_ecs_task_definition:
      join:
        task_definition:
          function: task_definition_id
      # root_attribute: services
      # root_attribute_key: name
      # root_attribute_key_parent: true #Take the field from the parent attributes
      target_resource_name: this
      # target_submodule: module.service
      defaults:
        create_task_definition: true
        create_tasks_iam_role: false
        create_task_exec_policy: false
        create_task_exec_iam_role: false
      import_id:
        function: aws_ecs_task_definition_import_id
      fields:
        task_definition_arn:
          field: arn
          type: string
        network_mode:
          field: network_mode
          type: string
        container_definitions:
          field: container_definitions
          jsonencode: true
          type: string
        cpu:
          field: cpu
          type: number
          default: null
        ephemeral_storage:
          field: ephemeral_storage
          type: map
        family:
          field: family
          type: string
        inference_accelerator:
          field: inference_accelerator
          type: map
        ipc_mode:
          field: ipc_mode
          type: string
        memory:
          field: memory
          type: number
          default: null
        proxy_configuration:
          field: proxy_configuration
          type: map
        requires_compatibilities:
          field: requires_compatibilities
          type: list
          default: null
        runtime_platform:
          field: runtime_platform
          type: map
          default: {}
        skip_destroy:
          field: skip_destroy
          type: boolean
          default: null
        volume:
          function: task_definition_volume
          type: map
        task_tags:
          field: tags
          type: map
        container_definition_defaults:
          field: container_definition_defaults
          type: map
          default: { enable_cloudwatch_logging: false }
        task_definition_placement_constraints:
          field: placement_constraints
          type: list
        tasks_iam_role_name:
          function: get_iam_role
          arg: task_role_arn
          type: string
        task_exec_iam_role_name:
          function: get_iam_role
          arg: execution_role_arn
          type: string

      # childs:

      # aws_iam_role:
      #   join:
      #     task_role_arn:
      #       function: get_arn
      #   # root_attribute: services
      #   # root_attribute_key: name
      #   # root_attribute_key_parent: true #Take the field from the parent attributes
      #   target_resource_name: tasks
      #   # target_submodule: module.service
      #   defaults:
      #     # create_tasks_iam_role: true
      #     tasks_iam_role_use_name_prefix: false
      #   fields:
      #     create_tasks_iam_role:
      #       unique: true
      #     tasks_iam_role_arn:
      #       field: arn
      #       type: string
      #     tasks_iam_role_name:
      #       field: name
      #       type: string
      #     tasks_iam_role_path:
      #       field: path
      #       type: string
      #     tasks_iam_role_description:
      #       field: description
      #       type: string
      #     tasks_iam_role_permissions_boundary:
      #       field: permissions_boundary
      #       type: string
      #     tasks_iam_role_tags:
      #       field: tags
      #       type: map
      #     tasks_assume_role_policy:
      #       field: assume_role_policy
      #       type: string
      #       multiline: true
      #     tasks_iam_role_inline_policies:
      #       field: inline_policy
      #       type: list
      #   childs:
      #     aws_iam_role_policy_attachment:
      #       join:
      #         name:
      #           function: get_field_from_attrs
      #           arg: role
      #       # root_attribute: services
      #       # root_attribute_key: name
      #       target_resource_name: tasks
      #       second_index:
      #         function: get_name_from_arn
      #         arg: policy_arn
      #       # target_submodule: module.service
      #       fields:
      #         tasks_iam_role_policies:
      #           function: tasks_iam_role_policies
      #           type: string
      #         create_tasks_iam_role:
      #           unique: true

      # Task execution IAM role
      # create_task_exec_iam_role               = try(each.value.create_task_exec_iam_role, true)
      # task_exec_iam_role_arn                  = lookup(each.value, "task_exec_iam_role_arn", null)
      # task_exec_iam_role_name                 = try(each.value.task_exec_iam_role_name, null)
      # task_exec_iam_role_use_name_prefix      = try(each.value.task_exec_iam_role_use_name_prefix, true)
      # task_exec_iam_role_path                 = try(each.value.task_exec_iam_role_path, null)
      # task_exec_iam_role_description          = try(each.value.task_exec_iam_role_description, null)
      # task_exec_iam_role_permissions_boundary = try(each.value.task_exec_iam_role_permissions_boundary, null)
      # task_exec_iam_role_tags                 = try(each.value.task_exec_iam_role_tags, {})
      # task_exec_iam_role_policies             = try(each.value.task_exec_iam_role_policies, {})

      # aws_iam_role_exec:
      #   resource_type: aws_iam_role
      #   join:
      #     execution_role_arn:
      #       function: get_arn
      #   target_resource_name: task_exec
      #   # defaults:
      #   #   create_task_exec_iam_role: true
      #   fields:
      #     create_task_exec_iam_role:
      #       unique: true
      #     task_exec_iam_role_arn:
      #       field: arn
      #       type: string
      #     task_exec_iam_role_name:
      #       field: name
      #       type: string
      #     task_exec_iam_role_path:
      #       field: path
      #       type: string
      #     task_exec_iam_role_description:
      #       field: description
      #       type: string
      #     task_exec_iam_role_permissions_boundary:
      #       field: permissions_boundary
      #       type: string
      #     task_exec_iam_role_tags:
      #       field: tags
      #       type: map
      #     task_exec_assume_role_policy:
      #       field: assume_role_policy
      #       type: string
      #       multiline: true
      #     task_exec_iam_role_inline_policies:
      #       field: inline_policy
      #       type: list
      #   childs:
      #     aws_iam_role_policy_attachment:
      #       join:
      #         name:
      #           function: get_field_from_attrs
      #           arg: role
      #       # root_attribute: services
      #       # root_attribute_key: name
      #       target_resource_name: tasks
      #       second_index:
      #         function: get_name_from_arn
      #         arg: policy_arn
      #       # target_submodule: module.service
      #       fields:
      #         task_exec_iam_role_policies:
      #           function: tasks_iam_role_policies
      #           type: string
      #         create_task_exec_iam_role:
      #           unique: true

    aws_appautoscaling_target:
      join:
        name:
          function: get_name_from_arn
          arg: resource_id
      target_resource_name: this
      defaults:
        enable_autoscaling: true
      import_id:
        function: aws_appautoscaling_target_import_id
      fields:
        autoscaling_min_capacity:
          field: min_capacity
          type: number
        autoscaling_max_capacity:
          field: max_capacity
          type: number
        autoscaling_tags:
          field: tags
          type: map
      childs:
        aws_appautoscaling_policy:
          join:
            resource_id:
              field: resource_id
            service_namespace:
              field: service_namespace
            scalable_dimension:
              field: scalable_dimension
          target_resource_name: this
          import_id:
            function: aws_appautoscaling_policy_import_id
          second_index:
            field: name
          fields:
            autoscaling_policies:
              function: autoscaling_policies
              type: list
        aws_appautoscaling_scheduled_action:
          join:
            resource_id:
              field: resource_id
            service_namespace:
              field: service_namespace
            scalable_dimension:
              field: scalable_dimension
          target_resource_name: this
          fields:
            autoscaling_scheduled_actions:
              function: autoscaling_scheduled_actions
              type: list

    aws_lb_target_group:
      join:
        name:
          join_function: join_ecs_service_to_aws_lb_target_group
      target_resource_name: this
      defaults:
        create_target_group: true
      fields:
        target_group_name:
          field: name
          type: string
        target_group_port:
          field: port
          type: number
        target_group_protocol:
          field: protocol
          type: string
        target_group_health_check:
          field: health_check
          type: map
        target_group_stickiness:
          field: stickiness
          type: map
        target_group_tags:
          field: tags
          type: map
        vpc_name:
          function: get_vpc_name
          arg: vpc_id
          type: string
        target_type:
          field: target_type
          type: string
        deregistration_delay:
          field: deregistration_delay
          type: number
      childs:
        aws_lb_listener_rule:
          join:
            name:
              join_function: join_aws_lb_target_group_to_aws_lb_listener_rule
          target_resource_name: this
          second_index:
            function: get_id_from_arn
            arg: arn
          defaults:
            create_aws_lb_listener_rule: true
          fields:
            listener_rules:
              function: get_listener_rules
              type: map
            listener_rule_lb_name:
              function: get_listener_rule_lb_name
              arg: listener_arn
              type: string
        aws_lb_listener:
          join:
            name:
              join_function: join_aws_lb_target_group_to_aws_lb_listener
          target_resource_name: this
          defaults:
            create_aws_lb_listener: true
          second_index:
            function: get_id_from_arn
            arg: arn
          fields:
            listeners:
              function: get_listeners
              type: map
            lb_name:
              function: get_lb_name
              arg: load_balancer_arn
              type: string

aws_iam_policy:
  # terraform_module: "../../../terraform-aws-modules/terraform-aws-iam//modules/iam_policy"
  terraform_module: "github.com/finisterra-io/terraform-aws-iam//modules/iam_policy?ref=main"
  terraform_module_version: "5.2.0"
  target_resource_name: default
  name_field: policy_name
  path: "iam_policy"
  fields:
    policy_documents:
      field: policy
      type: string
      multiline: true
    policy_name:
      field: name
      type: string
    policy_description:
      field: description
      type: string
    path:
      field: path
      type: string
    tags:
      field: tags
      type: map

aws_iam_role:
  # terraform_module: "../../../terraform-aws-modules/terraform-aws-iam//modules/iam_role"
  terraform_module: "github.com/finisterra-io/terraform-aws-iam//modules/iam_role?ref=main"
  terraform_module_version: "5.2.0"
  target_resource_name: default
  name_field: role_name
  path: "iam_role"
  dependencies:
    - "../iam_policy"
  defaults:
    instance_profile_enabled: false
  fields:
    role_name:
      field: name
      type: string
    assume_role_policy:
      field: assume_role_policy
      type: string
      multiline: true
    role_description:
      field: description
      type: string
    max_session_duration:
      field: max_session_duration
      type: number
    inline_policies:
      field: inline_policy
      type: list
    permissions_boundary:
      field: permissions_boundary
      type: string
    path:
      field: path
      type: string
    tags:
      field: tags
      type: map
    managed_policy_arns:
      field: managed_policy_arns
      type: list
  childs:
    aws_iam_role_policy_attachment:
      join:
        name:
          field: role
      target_resource_name: managed
      second_index:
        function: get_policy_attachment_index
    aws_iam_instance_profile:
      join:
        name:
          field: role
      defaults:
        instance_profile_enabled: true
      target_resource_name: default
      fields:
        instance_profile_name:
          field: name
          type: string
