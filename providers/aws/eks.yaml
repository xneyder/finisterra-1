aws_eks_cluster:
  # terraform_module: "../../../terraform-aws-modules/terraform-aws-eks"
  terraform_module: "github.com/finisterra-io/terraform-aws-eks.git?ref=main"
  terraform_module_version: "0.20.0"
  target_resource_name: this
  name_field: cluster_name
  # path: "eks"
  # dependencies:
  #   - "../iam_role"
  #   - "../kms"
  defaults:
    create_cluster_security_group: false
    create_node_security_group: false
  joined_fields:
    iam_role_arn:
      sub_fields:
        - iam_role_arn
    cluster_encryption_config:
      sub_fields:
        - key_arn
    cluster_security_group_ids:
      sub_fields:
        - cluster_security_group_ids
    cluster_addons:
      sub_fields:
        - service_account_role_arn
    eks_managed_node_groups:
      sub_fields:
        - iam_role_arn
        - vpc_security_group_ids

  fields:
    cluster_name:
      field: name
      type: string
    iam_role_arn:
      field: role_arn
      type: string
    cluster_version:
      field: version
      type: string
    cluster_enabled_log_types:
      field: enabled_cluster_log_types
      type: list
    cluster_security_group_ids:
      function: get_field_from_attrs
      arg: vpc_config.security_group_ids
      type: list
    # subnet_ids:
    #   function: get_field_from_attrs
    #   arg: vpc_config.subnet_ids
    #   type: list
    subnet_names:
      function: get_subnet_names
      arg: id
      type: list
    subnet_ids:
      function: get_subnet_ids
      arg: id
      type: list
    vpc_name:
      function: get_vpc_name_eks
      type: string
    vpc_id:
      function: get_vpc_id_eks
      type: string
    cluster_endpoint_private_access:
      function: get_field_from_attrs
      arg: vpc_config.endpoint_private_access
      type: bool
    cluster_endpoint_public_access:
      function: get_field_from_attrs
      arg: vpc_config.endpoint_public_access
      type: bool
    cluster_endpoint_public_access_cidrs:
      function: get_field_from_attrs
      arg: vpc_config.public_access_cidrs
      type: list
    cluster_encryption_config:
      field: encryption_config
      type: map
    cluster_tags:
      field: tags
      type: map
    cluster_ip_family:
      function: get_field_from_attrs
      arg: kubernetes_network_config.ip_family
      type: string
    cluster_service_ipv4_cidr:
      function: get_field_from_attrs
      arg: kubernetes_network_config.service_ipv4_cidr
      type: string
  childs:
    aws_cloudwatch_log_group:
      join:
        name:
          function: cloudwatch_log_group_name
      target_resource_name: this
      defaults:
        create_cloudwatch_log_group: true
      fields:
        cloudwatch_log_group_retention_in_days:
          field: retention_in_days
          type: number
        cloudwatch_log_group_kms_key_id:
          field: kms_key_id
          type: string
        cloudwatch_log_group_tags:
          field: tags
          type: map
    aws_eks_addon:
      join:
        id:
          field: cluster_name
      target_resource_name: this
      second_index:
        field: addon_name
      fields:
        cluster_addons:
          function: build_cluster_addons
          type: map
    aws_ec2_tag:
      join:
        resource_id:
          join_function: join_ec2_tag_resource_id
      target_resource_name: cluster_primary_security_group
      second_index:
        field: key
      fields:
        ec2_tags:
          function: build_cluster_tags
          type: map

    aws_iam_openid_connect_provider:
      join:
        arn:
          join_function: join_eks_cluster_and_oidc_provider
      target_resource_name: oidc_provider
      fields:
        oidc_provider_tags:
          field: tags
          type: map
        custom_oidc_thumbprints:
          field: thumbprint_list
          type: list
    aws_eks_node_group:
      join:
        name:
          field: cluster_name
      target_resource_name: this
      target_submodule: module.eks_managed_node_group
      first_index:
        function: get_node_group_name
      fields:
        eks_managed_node_groups:
          function: build_managed_node_groups
          type: map
      childs:
        aws_launch_template:
          join:
            name:
              join_function: join_node_group_launch_template
          target_resource_name: this
          target_submodule: module.eks_managed_node_group
          first_index:
            function: get_node_group_name
          fields:
            eks_managed_node_groups:
              function: build_launch_templates
              type: map

        aws_autoscaling_schedule:
          join:
            name:
              join_function: join_node_group_autoscaling_schedule
          target_resource_name: this
          target_submodule: module.eks_managed_node_group
          first_index:
            function: get_node_group_name
          fields:
            eks_managed_node_groups:
              function: build_node_group_autoscaling_schedules
              type: map

aws_iam_role:
  # terraform_module: "../../../terraform-aws-modules/terraform-aws-iam//modules/iam_role"
  terraform_module: "github.com/finisterra-io/terraform-aws-iam//modules/iam_role?ref=main"
  terraform_module_version: "5.2.0"
  target_resource_name: default
  name_field: role_name
  # path: "iam_role"
  # dependencies:
  #   - "../iam_policy"
  joined_fields:
    managed_policy_arns:
      sub_fields:
        - managed_policy_arns
  fields:
    role_name:
      field: name
      type: string
    assume_role_policy:
      field: assume_role_policy
      type: string
      multiline: true
    role_description:
      field: description
      type: string
    max_session_duration:
      field: max_session_duration
      type: number
    inline_policies:
      function: get_inline_policies
      type: list
    permissions_boundary:
      field: permissions_boundary
      type: string
    path:
      field: path
      type: string
    tags:
      field: tags
      type: map
    managed_policy_arns:
      field: managed_policy_arns
      type: list
  childs:
    aws_iam_role_policy_attachment:
      join:
        name:
          field: role
      target_resource_name: managed
      second_index:
        function: get_policy_attachment_index
    aws_iam_instance_profile:
      join:
        name:
          field: role
      target_resource_name: default
      second_index:
        field: name
      fields:
        instance_profiles:
          function: get_instance_profiles
          type: list

aws_iam_policy:
  # terraform_module: "../../../terraform-aws-modules/terraform-aws-iam//modules/iam_policy"
  terraform_module: "github.com/finisterra-io/terraform-aws-iam//modules/iam_policy?ref=main"
  terraform_module_version: "5.2.0"
  target_resource_name: default
  name_field: policy_name
  # path: "iam_policy"
  fields:
    policy_documents:
      function: get_policy_documents
      type: string
      multiline: true
    policy_name:
      field: name
      type: string
    policy_description:
      field: description
      type: string
    path:
      field: path
      type: string
    tags:
      field: tags
      type: map

aws_kms_key:
  # terraform_module: "../../../terraform-aws-modules/terraform-aws-kms"
  terraform_module: "github.com/finisterra-io/terraform-aws-kms?ref=main"
  terraform_module_version: "5.2.0"
  target_resource_name: this
  # path: "kms"
  defaults:
    create_external: false
    create_replica: false
    create_replica_external: false
  fields:
    bypass_policy_lockout_safety_check:
      field: bypass_policy_lockout_safety_check
      type: string
    customer_master_key_spec:
      field: customer_master_key_spec
      type: string
    custom_key_store_id:
      field: custom_key_store_id
      type: string
    deletion_window_in_days:
      field: deletion_window_in_days
      type: string
    description:
      field: description
      type: string
    enable_key_rotation:
      field: enable_key_rotation
      type: string
    is_enabled:
      field: is_enabled
      type: string
    key_usage:
      field: key_usage
      type: string
    multi_region:
      field: multi_region
      type: string
    policy:
      field: policy
      type: string
      multiline: true
    tags:
      field: tags
      type: map
  childs:
    aws_kms_replica_key:
      join:
        arn:
          field: primary_key_arn
      target_resource_name: this
      defaults:
        create_replica: true
      fields:
        primary_key_arn:
          field: primary_key_arn
          type: string
    aws_kms_alias:
      join:
        id:
          field: target_key_id
      target_resource_name: this
      second_index:
        field: name
      fields:
        aliases:
          function: build_aliases
          arg: name
          type: list
    aws_kms_grant:
      join:
        arn:
          field: key_id
      target_resource_name: this
      second_index:
        field: id
      fields:
        grants:
          function: build_grants
          arg: id
          type: map

aws_security_group:
  # terraform_module: "../../../terraform-aws-modules/terraform-aws-security-group"
  terraform_module: "github.com/finisterra-io/terraform-aws-security-group?ref=main"
  terraform_module_version: "5.2.0"
  target_resource_name: default
  name_field: security_group_name
  add_id_hash_to_name: true
  # path: "security_group"
  defaults:
    create_before_destroy: false
  fields:
    security_group_name:
      field: name
      type: string
    vpc_name:
      function: get_vpc_name
      arg: vpc_id
      type: string
    vpc_id:
      function: get_vpc_id
      type: string
      arg: vpc_id
    security_group_description:
      field: description
      type: string
    tags:
      field: tags
      type: map
  childs:
    aws_vpc_security_group_ingress_rule:
      join:
        id:
          field: security_group_id
      import_id:
        field: security_group_rule_id
      target_resource_name: dbc
      second_index:
        field: id
      fields:
        ingress_rules:
          function: get_security_group_rules
          type: map
    aws_vpc_security_group_egress_rule:
      join:
        id:
          field: security_group_id
      import_id:
        field: security_group_rule_id
      target_resource_name: dbc
      second_index:
        field: id
      fields:
        egress_rules:
          function: get_security_group_rules
          type: map
