aws_ecs_cluster:
  terraform_module: "terraform-aws-modules/ecs/aws"
  terraform_module_version: "5.2.0"
  keys:
    - name
  target_resource_name: this
  target_submodule: module.cluster
  defaults:
    create_cloudwatch_log_group: false
  fields:
    cluster_name:
      field: name
      type: string
    cluster_configuration:
      function: to_map
      arg: configuration
      type: map
    cluster_service_connect_defaults:
      function: to_map
      arg: service_connect_defaults
      type: map
    cluster_settings:
      function: to_map
      arg: setting
      type: map
    tags:
      field: tags
      type: map
  childs:
    aws_cloudwatch_log_group: #Not tested
      join:
        name:
          function: cloudwatch_log_group_name
      target_resource_name: this
      target_submodule: module.cluster
      defaults:
        create_cloudwatch_log_group: true
      fields:
        cloudwatch_log_group_retention_in_days:
          field: retention_in_days
          type: number
        cloudwatch_log_group_kms_key_id:
          field: kms_key_id
          type: string
        cloudwatch_log_group_tags:
          field: tags
          type: map

    # aws_ecs_cluster_capacity_providers: #Not tested
    #   join:
    #     - cluster_name
    #   target_resource_name: this
    #   fields:

    # aws_ecs_capacity_provider: #Not tested
    #   join:
    #     - cluster_name
    #   target_resource_name: this
    #   fields:

aws_ecs_service:
  terraform_module: "terraform-aws-modules/ecs/aws//modules/service"
  terraform_module_version: "5.2.0"
  dict_to_hcl: true
  join:
    arn:
      function: aws_ecs_service_cluster_arn
  target_resource_name: ignore_task_definition
  # target_submodule: module.service
  # root_attribute: services
  # root_attribute_key: name
  defaults:
    ignore_task_definition_changes: true
    create_task_definition: false
    enable_autoscaling: false #To implement aws_appautoscaling_policy, and aws_appautoscaling_target
  fields:
    name:
      field: name
      type: string
    alarms:
      field: alarms
      type: map
    capacity_provider_strategy:
      field: capacity_provider_strategy
      type: map
    cluster_arn:
      field: cluster
      type: string
    deployment_circuit_breaker:
      field: deployment_circuit_breaker
      type: map
    deployment_controller:
      field: deployment_controller
      type: map
    deployment_maximum_percent:
      field: deployment_maximum_percent
      type: number
    deployment_minimum_healthy_percent:
      field: deployment_minimum_healthy_percent
      type: number
    desired_count:
      field: desired_count
      type: number
    enable_ecs_managed_tags:
      field: enable_ecs_managed_tags
      type: boolean
    enable_execute_command:
      field: enable_execute_command
      type: boolean
    force_new_deployment:
      field: force_new_deployment
      type: boolean
      default: null
    health_check_grace_period_seconds:
      field: health_check_grace_period_seconds
      type: number
    launch_type:
      field: launch_type
      type: string
    load_balancer:
      field: load_balancer
      type: map
    ordered_placement_strategy:
      field: ordered_placement_strategy
      type: map
    placement_constraints:
      field: placement_constraints
      type: map
    platform_version:
      field: platform_version
      type: string
    scheduling_strategy:
      field: scheduling_strategy
      type: string
    service_connect_configuration:
      field: service_connect_configuration
      type: map
    service_registries:
      field: service_registries
      type: map
    triggers:
      field: triggers
      type: map
    wait_for_steady_state:
      field: wait_for_steady_state
      type: boolean
      default: null
    propagate_tags:
      field: propagate_tags
      type: string
    tags:
      field: tags
      type: map
    timeouts:
      field: timeouts
      type: map
      default: null
    assign_public_ip:
      function: get_network_field
      arg: assign_public_ip
      type: boolean
    security_group_ids:
      function: get_network_field
      arg: security_group_ids
      type: list
    subnet_ids:
      function: get_network_field
      arg: subnet_ids
      type: list
    create_security_group:
      function: check_subnet_ids

  childs:
    aws_ecs_task_definition:
      join:
        task_definition:
          function: task_definition_id
      # root_attribute: services
      # root_attribute_key: name
      # root_attribute_key_parent: true #Take the field from the parent attributes
      target_resource_name: this
      # target_submodule: module.service
      defaults:
        create_task_definition: true
        create_tasks_iam_role: false
        create_task_exec_policy: false
        create_task_exec_iam_role: false
      fields:
        task_definition_arn:
          field: arn
          type: string
        network_mode:
          field: network_mode
          type: string
        container_definitions:
          function: container_definitions
          type: map
        container_definition_defaults:
          field: container_definition_defaults
          type: map
        cpu:
          field: cpu
          type: number
          default: null
        ephemeral_storage:
          field: ephemeral_storage
          type: map
        family:
          field: family
          type: string
        inference_accelerator:
          field: inference_accelerator
          type: map
        ipc_mode:
          field: ipc_mode
          type: string
        memory:
          field: memory
          type: number
          default: null
        proxy_configuration:
          field: proxy_configuration
          type: map
        requires_compatibilities:
          field: requires_compatibilities
          type: list
          default: null
        runtime_platform:
          field: runtime_platform
          type: map
          default: {}
        skip_destroy:
          field: skip_destroy
          type: boolean
          default: null
        volume:
          function: task_definition_volume
          type: map
        task_tags:
          field: tags
          type: map
      childs:
        # Tasks - IAM role
        # create_tasks_iam_role               = try(each.value.create_tasks_iam_role, true)
        # tasks_iam_role_arn                  = lookup(each.value, "tasks_iam_role_arn", null)
        # tasks_iam_role_name                 = try(each.value.tasks_iam_role_name, null)
        # tasks_iam_role_use_name_prefix      = try(each.value.tasks_iam_role_use_name_prefix, true)
        # tasks_iam_role_path                 = try(each.value.tasks_iam_role_path, null)
        # tasks_iam_role_description          = try(each.value.tasks_iam_role_description, null)
        # tasks_iam_role_permissions_boundary = try(each.value.tasks_iam_role_permissions_boundary, null)
        # tasks_iam_role_tags                 = try(each.value.tasks_iam_role_tags, {})
        # tasks_iam_role_policies             = lookup(each.value, "tasks_iam_role_policies", {})
        # tasks_iam_role_statements           = lookup(each.value, "tasks_iam_role_statements", {})

        aws_iam_role:
          join:
            task_role_arn:
              function: get_arn
          # root_attribute: services
          # root_attribute_key: name
          # root_attribute_key_parent: true #Take the field from the parent attributes
          target_resource_name: tasks
          # target_submodule: module.service
          defaults:
            create_tasks_iam_role: true
            tasks_iam_role_use_name_prefix: false
          fields:
            tasks_iam_role_arn:
              field: arn
              type: string
            tasks_iam_role_name:
              field: name
              type: string
            tasks_iam_role_path:
              field: path
              type: string
            tasks_iam_role_description:
              field: description
              type: string
            tasks_iam_role_permissions_boundary:
              field: permissions_boundary
              type: string
            tasks_iam_role_tags:
              field: tags
              type: map
          childs:
            aws_iam_role_policy_attachment:
              join:
                name:
                  function: get_field_from_attrs
                  arg: role
              # root_attribute: services
              # root_attribute_key: name
              target_resource_name: tasks
              second_index:
                function: get_name_from_arn
                arg: policy_arn
              # target_submodule: module.service
              fields:
                tasks_iam_role_policies:
                  function: tasks_iam_role_policies
                  type: string

        # Task execution IAM role
        # create_task_exec_iam_role               = try(each.value.create_task_exec_iam_role, true)
        # task_exec_iam_role_arn                  = lookup(each.value, "task_exec_iam_role_arn", null)
        # task_exec_iam_role_name                 = try(each.value.task_exec_iam_role_name, null)
        # task_exec_iam_role_use_name_prefix      = try(each.value.task_exec_iam_role_use_name_prefix, true)
        # task_exec_iam_role_path                 = try(each.value.task_exec_iam_role_path, null)
        # task_exec_iam_role_description          = try(each.value.task_exec_iam_role_description, null)
        # task_exec_iam_role_permissions_boundary = try(each.value.task_exec_iam_role_permissions_boundary, null)
        # task_exec_iam_role_tags                 = try(each.value.task_exec_iam_role_tags, {})
        # task_exec_iam_role_policies             = try(each.value.task_exec_iam_role_policies, {})

        aws_iam_role_exec:
          resource_type: aws_iam_role
          join:
            execution_role_arn:
              function: get_arn
          target_resource_name: task_exec
          defaults:
            create_task_exec_iam_role: true
          fields:
            task_exec_iam_role_arn:
              field: arn
              type: string
            task_exec_iam_role_name:
              field: name
              type: string
            task_exec_iam_role_path:
              field: path
              type: string
            task_exec_iam_role_description:
              field: description
              type: string
            task_exec_iam_role_permissions_boundary:
              field: permissions_boundary
              type: string
            task_exec_iam_role_tags:
              field: tags
              type: map
          childs:
            aws_iam_role_policy_attachment:
              join:
                name:
                  function: get_field_from_attrs
                  arg: role
              # root_attribute: services
              # root_attribute_key: name
              target_resource_name: tasks
              second_index:
                function: get_name_from_arn
                arg: policy_arn
              # target_submodule: module.service
              fields:
                task_exec_iam_role_policies:
                  function: tasks_iam_role_policies
                  type: string
