# models.py
from datetime import datetime
from sqlalchemy import Column, Integer, String, Boolean, ForeignKey, DateTime, UniqueConstraint
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship

Base = declarative_base()


class Organization(Base):
    __tablename__ = 'organization'

    id = Column(Integer, primary_key=True)
    name = Column(String, unique=True)
    createdAt = Column(DateTime, default=datetime.utcnow)
    updatedAt = Column(DateTime, onupdate=datetime.utcnow)

    aws_resource = relationship("AwsResource", back_populates="organization")


class AwsResource(Base):
    __tablename__ = 'aws_resource'

    id = Column(Integer, primary_key=True)
    organizationId = Column(Integer, ForeignKey('organization.id'))
    provider = Column(String)
    accountId = Column(String)
    region = Column(String)
    role = Column(String)
    resourceType = Column(String)
    resourceName = Column(String)
    resourceId = Column(String)
    stateFile = Column(String)
    scannedStateFile = Column(String)
    status = Column(String)
    autogenerated = Column(Boolean)
    description = Column(String, nullable=True)
    createdAt = Column(DateTime, default=datetime.utcnow)
    updatedAt = Column(DateTime, onupdate=datetime.utcnow)

    organization = relationship("Organization", back_populates="aws_resource")

    __table_args__ = (
        UniqueConstraint('accountId', 'resourceType',
                         'resourceId', name='aws_resource_key'),
    )
